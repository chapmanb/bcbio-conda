*** setup.py.orig	2012-08-14 00:51:16.000000000 -0400
--- setup.py	2014-07-24 09:52:04.363631436 -0400
***************
*** 16,25 ****
  	print >> sys.stderr, "ERROR: CPAT only works on Python2.x and requires Python 2.7 or greater"
  	sys.exit()
  
- # Automatically download setuptools if not available
- from distribute_setup import use_setuptools
- use_setuptools()
- 
  from setuptools import *
  from glob import glob
  
--- 16,21 ----
***************
*** 46,58 ****
              description = "Coding Potential Assessment Tool",
              url = "http://code.google.com/p/cpat/",
              zip_safe = False,
-             dependency_links = ['http://bitbucket.org/james_taylor/bx-python/wiki/Home','http://wwwfgu.anat.ox.ac.uk/~andreas/documentation/samtools/contents.html'],
              cmdclass=command_classes )
  
  # ---- Commands -------------------------------------------------------------
  
- from distutils.core import Command
- 
  # Use build_ext from Cython
  command_classes = {}
  
--- 42,51 ----
***************
*** 62,104 ****
  	command_classes['build_ext'] = Cython.Distutils.build_ext
  except:
  	pass
-     
- # Use epydoc if found
- try:
- 	import pkg_resources
- 	pkg_resources.require( "epydoc" )
- 	import epydoc.cli, sys, os, os.path
- 	# Create command class to build API documentation
- 	class BuildAPIDocs( Command ):
- 		user_options = []
- 		def initialize_options( self ):
- 			pass
- 		def finalize_options( self ):
- 			pass
- 		def run( self ):
- 			# Save working directory and args
- 			old_argv = sys.argv
- 			old_cwd = os.getcwd()
- 			# Build command line for Epydoc
- 			sys.argv = """epydoc.py bx --verbose --html --simple-term
-                                        --exclude=._
-                                        --exclude=_tests
-                                        --docformat=reStructuredText
-                                        --output=../doc/docbuild/html/apidoc""".split()
- 			# Make output directory
- 			if not os.path.exists( "./doc/docbuild/html/apidoc" ):
- 				os.mkdir( "./doc/docbuild/html/apidoc" )
- 			# Move to lib directory (so bx package is in current directory)
- 			os.chdir( "./lib" )
- 			# Invoke epydoc
- 			epydoc.cli.cli()
- 			# Restore args and working directory
- 			sys.argv = old_argv
- 			os.chdir( old_cwd )
- 	# Add to extra_commands    
- 	command_classes['build_apidocs'] = BuildAPIDocs
- except:
- 	pass
  
  # ---- Extension Modules ----------------------------------------------------
  
--- 55,60 ----
